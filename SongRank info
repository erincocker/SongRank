SUMMARY OF CODE:
The initial list initially contains all songs to be ranked.
The songs are Song objects, they have an id and a list of comparisons to other songs.
These comparisons are initially '', then changed to '+' if the song is better than
 the song with id matching the list position. (or '-' for song being worse)

Program repeatedly gives the user pairs of songs, one song already in the
 master list, and one in the initial list. The user chooses their favourite.
If the initial list song now has a determined place in the master list,
   (i.e. it is better than the song in 5th, worse than the song in 4th,
   so it must be placed between those two songs)
 it is removed from the initial list and added to the master list.

We also add any inferred information to the initial list.
If song A is better than the song in 2nd on the master list, then it must
 also be better than the songs in 3rd, 4th, etc.

Continue until all songs ranked successfully.


to do next:

 make everything neater and clearer - both on the ui side
 and on the code side

 multiple save slots?

 optimise song picking even more - potentially more random but also more efficient?